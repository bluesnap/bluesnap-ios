format_version: "11"
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: ios
trigger_map:
- push_branch: '*'
  workflow: primary
- pull_request_source_branch: '*'
  workflow: primary
workflows:
  deploy:
    description: |
      The workflow tests, builds and deploys the app using *Deploy to bitrise.io* step.

      For testing the *retry_on_failure* test repetition mode is enabled.

      Next steps:
      - Set up [Connecting to an Apple service with API key](https://devcenter.bitrise.io/en/accounts/connecting-to-services/connecting-to-an-apple-service-with-api-key.html##).
      - Or further customise code signing following our [iOS code signing](https://devcenter.bitrise.io/en/code-signing/ios-code-signing.html) guide.
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@8: {}
    - recreate-user-schemes@1:
        inputs:
        - project_path: $BITRISE_PROJECT_PATH
    - cocoapods-install@2:
        inputs:
        - is_cache_disabled: "true"
    - xcode-test@4:
        inputs:
        - project_path: $BITRISE_PROJECT_PATH
        - scheme: $BITRISE_SCHEME
        - test_repetition_mode: retry_on_failure
        - cache_level: none
    - xcode-archive@4:
        inputs:
        - project_path: $BITRISE_PROJECT_PATH
        - scheme: $BITRISE_SCHEME
        - distribution_method: $BITRISE_DISTRIBUTION_METHOD
        - automatic_code_signing: api-key
        - cache_level: none
    - deploy-to-bitrise-io@2: {}
  primary:
    description: |
      The workflow executes the tests. The *retry_on_failure* test repetition mode is enabled.

      Next steps:
      - Check out [Getting started with iOS apps](https://devcenter.bitrise.io/en/getting-started/getting-started-with-ios-apps.html).
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@8: {}
    - restore-cocoapods-cache@1: {}
    - restore-spm-cache@1: {}
    - recreate-user-schemes@1:
        inputs:
        - project_path: $BITRISE_SOURCE_DIR/BluesnapIOS.xcworkspace
    - script@1:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # make pipelines' return status equal the last command to exit with a non-zero status, or zero if all commands exit successfully
            set -o pipefail
            # debug log
            set -x

            # write your script here
            /usr/libexec/PlistBuddy -c "add :BsAPIUser string $BS_API_USER" -c "add :BsAPIPassword string $BS_API_PASSWORD" -x $BITRISE_SOURCE_DIR/Sources/BluesnapSDK/Resources/credentials.plist
            /usr/libexec/PlistBuddy -c "add :BsAPIUser string $BS_API_USER" -c "add :BsAPIPassword string $BS_API_PASSWORD" -x $BITRISE_SOURCE_DIR/Tests/BluesnapSDKIntegrationTests/Resources/credentials.plist
    - xcode-test@4:
        inputs:
        - scheme: BluesnapSDK
        - test_plan: BluesnapSDK
        - test_repetition_mode: retry_on_failure
        - project_path: $BITRISE_SOURCE_DIR/BluesnapIOS.xcworkspace
    - xcode-test@4:
        inputs:
        - scheme: BluesnapSDK
        - test_plan: BluesnapSDKIntegration
        - test_repetition_mode: retry_on_failure
        - project_path: $BITRISE_SOURCE_DIR/BluesnapIOS.xcworkspace
    - xcode-test@4:
        inputs:
        - scheme: BluesnapSDKExample
        - test_plan: SanityUITests
        - project_path: $BITRISE_SOURCE_DIR/BluesnapIOS.xcworkspace
    - save-cocoapods-cache@1: {}
    - save-spm-cache@1: {}
    - deploy-to-bitrise-io@2: {}
meta:
  bitrise.io:
    stack: osx-xcode-14.3.x-ventura
app:
  envs:
  - opts:
      is_expand: false
    BITRISE_PROJECT_PATH: BluesnapIOS
  - opts:
      is_expand: false
    BITRISE_SCHEME: BluesnapSDK
  - opts:
      is_expand: false
    BITRISE_DISTRIBUTION_METHOD: ad-hoc
